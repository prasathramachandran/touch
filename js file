Checkbox show and hide
Create a js file and put this js code there, and save either it in the global client lib file or in the component specific client lib file
/**
 * How to use:
 *
 * 1. Add class to checkbox
 *
 *		Example: granite:class="cq-dialog-checkbox-showhide"
 *
 * 2. Add cq-dialog-checkbox-showhide-target data-attribute to checkbox with the value being the selector to target for toggleing
 *
 *		Example: cq-dialog-checkbox-showhide-target=".togglefield"
 *
 * 3. Add target class to toggleable fields or components
 *
 *	    Example: granite:class="togglefield"
 */
(function (document, $) { 
    "use strict";

    // when dialog gets injected
    $(document).on("foundation-contentloaded", function (e) {
        // if there is already an inital value make sure the according target element becomes visible
checkboxShowHideHandler($(".cq-dialog-checkbox-showhide", e.target));
    });

    //$(document).on("change", ".cq-dialog-checkbox-showhide", function (e) {
    //    checkboxShowHideHandler($(this));
    //});

functioncheckboxShowHideHandler(el) {
el.each(function (i, element) {
if($(element).is("coral-checkbox")) {
                // handle Coral3 base drop-down
Coral.commons.ready(element, function (component) {
showHide(component, element);
component.on("change", function () {
showHide(component, element);
                    });
                });
            }
        })
    }

functionshowHide(component, element) {
        // get the selector to find the target elements. its stored as data-.. attribute
var target = $(element).data("cqDialogCheckboxShowhideTarget");
var $target = $(target);
if (target) {
            $target.addClass("hide");
            $target.siblings('coral-icon').addClass("hide");
            $target.siblings('label.coral-Form-fieldlabel').addClass("hide");
if (component.checked) {
                $target.removeClass("hide");
                $target.siblings('coral-icon').removeClass("hide");
                $target.siblings('label.coral-Form-fieldlabel').removeClass("hide");
            }
        }
    }
})(document, Granite.$);
